rules_version = '2';

// Returns true if the uploaded file is an image and its size is below the given number of MB.
function isImageBelowMaxSize(maxSizeMB) {
  return request.resource.size < maxSizeMB * 1024 * 1024
      && request.resource.contentType.matches('image/.*');
}

function isUserFileNameAllowed(fileName) {
    return fileName == 'profileImage.png';
}

function isCreatorFileNameAllowed(fileName) {
    return fileName == 'profileImage.png' || 
      fileName == 'coverImage.png' ||
      fileName == 'tierImage.png';
}

function isNftFileNameAllowed(fileName) {
    return fileName == 'im.png' || 
      fileName == 'mt.json';
}

service firebase.storage {
  match /b/{bucket}/o {
    match /users/{userId}/{fileName} {
      allow write: if request.auth != null 
                   && request.auth.uid == userId 
                   && isImageBelowMaxSize(10)
                   && isUserFileNameAllowed(fileName);
      allow read: if true;
    }
    match /users/{userId}/n/{cId}/{fileName} {
      allow write: if request.auth != null 
                   && request.auth.uid == userId 
                   && isNftFileNameAllowed(fileName);
      allow read: if true;
    }

    match /creators/{userId}/profile/{fileName} {
      allow write: if request.auth != null 
                   && request.auth.uid == userId 
                   && isImageBelowMaxSize(10)
                   && isCreatorFileNameAllowed(fileName);
      allow read: if true;
    }

    match /defaults/{file} {
      allow write: if false
      allow read: if true;
    }
  }
}